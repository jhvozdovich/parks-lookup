// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParksLookup.Models;

namespace ParksLookup.Migrations
{
    [DbContext(typeof(ParksLookupContext))]
    [Migration("20200612210300_OneToMany4")]
    partial class OneToMany4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ParksLookup.Models.Landmark", b =>
                {
                    b.Property<int>("LandmarkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("ParkId");

                    b.HasKey("LandmarkId");

                    b.HasIndex("ParkId");

                    b.ToTable("Landmarks");
                });

            modelBuilder.Entity("ParksLookup.Models.Park", b =>
                {
                    b.Property<int>("ParkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Hours");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("PhotoUrl");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("ParkId");

                    b.ToTable("Parks");
                });

            modelBuilder.Entity("ParksLookup.Models.Landmark", b =>
                {
                    b.HasOne("ParksLookup.Models.Park", "Park")
                        .WithMany("Landmarks")
                        .HasForeignKey("ParkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
